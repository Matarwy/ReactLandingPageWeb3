{"ast":null,"code":"import _defineProperty from \"D:/projects/TP/v1/TradingPlanet-Home/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\TP\\\\v1\\\\TradingPlanet-Home\\\\components\\\\Footer\\\\Footer.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport LangIcon from '@material-ui/icons/Language';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Select from '@material-ui/core/Select';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Link from '@material-ui/core/Link';\nimport IconButton from '@material-ui/core/IconButton';\nimport Logo from '../Logo';\nimport brand from \"../../public/text/brand\";\nimport imgApi from \"../../public/images/imgAPI\";\nimport { i18n, withTranslation } from \"../../i18n\";\nimport useStyles from './footer-style';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport MediumIcon from '@material-ui/icons/medium';\n\nfunction Copyright() {\n  return __jsx(Typography, {\n    variant: \"body2\",\n    display: \"block\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \"Copyright \\xA9 2021 TradingPlanet | All rights reserved.\");\n}\n\n_c = Copyright;\nvar footer = {\n  description: ['Resource', 'Another resource', 'Final resource', 'Privacy policy', 'Terms of use', 'Terms Condition'],\n  link: ['#resource', '#another-resource', '#final-resource', '#privacy-policy', '#terms-of-use']\n};\nvar news = [{\n  text: 'Sed imperdiet enim ligula vitae viverra.',\n  img: imgApi.photo[5]\n}, {\n  text: 'Sed imperdiet enim ligula vitae viverra.',\n  img: imgApi.photo[6]\n}, {\n  text: 'Sed imperdiet enim ligula vitae viverra.',\n  img: imgApi.photo[7]\n}];\n\nfunction Footer(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(null),\n      ctn = _useState[0],\n      setCtn = _useState[1];\n\n  var classes = useStyles();\n  var t = props.t,\n      invert = props.invert;\n\n  var _useState2 = useState({\n    lang: 'eng'\n  }),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  useEffect(function () {\n    setValues({\n      lang: i18n.language\n    });\n    setCtn(document.getElementById('main-wrap'));\n  }, []);\n\n  function handleChange(event) {\n    setValues(function (oldValues) {\n      return _objectSpread(_objectSpread({}, oldValues), {}, _defineProperty({}, event.target.name, event.target.value));\n    });\n\n    if (event.target.value === 'ara') {\n      i18n.changeLanguage('ara');\n      props.toggleDir('rtl');\n    } else {\n      i18n.changeLanguage(event.target.value);\n      props.toggleDir('ltr');\n    }\n  }\n\n  return __jsx(Container, {\n    fixed: true,\n    component: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: clsx(classes.footer, invert && classes.invert),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, brand.crypto.projectName)), __jsx(Typography, {\n    color: \"textPrimary\",\n    className: classes.footerDesc,\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, t('common:crypto-landing.banner_title'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.quickLinks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, t('common:crypto-landing.footer_link')), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, footer.description.map(function (item, index) {\n    return __jsx(\"li\", {\n      key: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, __jsx(Link, {\n      href: footer.link[index],\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, item));\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.socmed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"https://twitter.com/tradingplanetx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"TW\",\n    className: classes.margin,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, __jsx(TwitterIcon, {\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }))), __jsx(Link, {\n    href: \"https://t.me/TradingPlanetExchange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"TM\",\n    className: classes.margin,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, __jsx(TelegramIcon, {\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }))), __jsx(Link, {\n    href: \"https://medium.com/@TradingPlanetEX\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"MD\",\n    className: classes.margin,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, __jsx(MediumIcon, {\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  })))), __jsx(Copyright, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(Footer, \"ZJvVvHHOd26wg80HV4AtFJuDVHE=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Footer;\nFooter.propTypes = {\n  t: PropTypes.func.isRequired,\n  invert: PropTypes.bool,\n  toggleDir: PropTypes.func\n};\nFooter.defaultProps = {\n  invert: false,\n  toggleDir: function toggleDir() {}\n};\nexport default withTranslation(['crypto-landing'])(Footer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"Footer\");","map":{"version":3,"sources":["D:/projects/TP/v1/TradingPlanet-Home/components/Footer/Footer.js"],"names":["React","useState","useEffect","PropTypes","clsx","Container","Grid","LangIcon","InputAdornment","Typography","ButtonBase","Select","OutlinedInput","MenuItem","Link","IconButton","Logo","brand","imgApi","i18n","withTranslation","useStyles","TwitterIcon","TelegramIcon","MediumIcon","Copyright","footer","description","link","news","text","img","photo","Footer","props","ctn","setCtn","classes","t","invert","lang","values","setValues","language","document","getElementById","handleChange","event","oldValues","target","name","value","changeLanguage","toggleDir","logo","crypto","projectName","footerDesc","quickLinks","title","map","item","index","socmed","margin","color","propTypes","func","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LangIcon from '@material-ui/icons/Language';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Select from '@material-ui/core/Select';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Link from '@material-ui/core/Link';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Logo from '../Logo';\r\nimport brand from '~/public/text/brand';\r\nimport imgApi from '~/public/images/imgAPI';\r\nimport { i18n, withTranslation } from '~/i18n';\r\nimport useStyles from './footer-style';\r\n\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport MediumIcon from '@material-ui/icons/medium';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" display=\"block\" color=\"textSecondary\">\r\n      Copyright © 2021 TradingPlanet | All rights reserved.\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst footer = {\r\n  description: ['Resource', 'Another resource', 'Final resource', 'Privacy policy', 'Terms of use', 'Terms Condition'],\r\n  link: ['#resource', '#another-resource', '#final-resource', '#privacy-policy', '#terms-of-use'],\r\n};\r\n\r\nconst news = [\r\n  {\r\n    text: 'Sed imperdiet enim ligula vitae viverra.',\r\n    img: imgApi.photo[5]\r\n  },\r\n  {\r\n    text: 'Sed imperdiet enim ligula vitae viverra.',\r\n    img: imgApi.photo[6]\r\n  },\r\n  {\r\n    text: 'Sed imperdiet enim ligula vitae viverra.',\r\n    img: imgApi.photo[7]\r\n  }\r\n];\r\n\r\nfunction Footer(props) {\r\n  const [ctn, setCtn] = useState(null);\r\n  const classes = useStyles();\r\n  const { t, invert } = props;\r\n  const [values, setValues] = useState({\r\n    lang: 'eng',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setValues({ lang: i18n.language });\r\n    setCtn(document.getElementById('main-wrap'));\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setValues(oldValues => ({\r\n      ...oldValues,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    if (event.target.value === 'ara') {\r\n      i18n.changeLanguage('ara');\r\n      props.toggleDir('rtl');\r\n    } else {\r\n      i18n.changeLanguage(event.target.value);\r\n      props.toggleDir('ltr');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container fixed component=\"footer\">\r\n      <div className={clsx(classes.footer, invert && classes.invert)}>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12} md={5}>\r\n            <div className={classes.logo}>\r\n              <Logo />\r\n              <Typography variant=\"h6\" color=\"textPrimary\">\r\n                {brand.crypto.projectName}\r\n              </Typography>\r\n            </div>\r\n            <Typography color=\"textPrimary\" className={classes.footerDesc} gutterBottom>\r\n              {t('common:crypto-landing.banner_title')}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <div className={classes.quickLinks}>\r\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                {t('common:crypto-landing.footer_link')}\r\n              </Typography>\r\n              <ul>\r\n                {footer.description.map((item, index) => (\r\n                  <li key={item}>\r\n                    <Link href={footer.link[index]} variant=\"subtitle1\" color=\"textSecondary\">\r\n                      {item}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            {/* {news.map((item, index) => (\r\n              <ButtonBase className={classes.blogItem} href=\"#\" key={index.toString()}>\r\n                <figure>\r\n                  <img src={item.img} alt=\"thumb\" />\r\n                </figure>\r\n                <div className={classes.listText}>\r\n                  <Typography variant=\"button\" className={classes.category}>\r\n                    {t('common:crypto-landing.footer_news')}\r\n                  </Typography>\r\n                  <Typography display=\"block\" component=\"span\">Sed imperdiet enim ligula vitae viverra. </Typography>\r\n                </div>\r\n              </ButtonBase>\r\n            ))} */}\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <div className={classes.socmed}>\r\n              <Link href=\"https://twitter.com/tradingplanetx\">\r\n                <IconButton aria-label=\"TW\" className={classes.margin} size=\"small\">\r\n                  <TwitterIcon style={{color: '#fff'}}/>\r\n                </IconButton>\r\n              </Link>\r\n\r\n              <Link href=\"https://t.me/TradingPlanetExchange\">\r\n                <IconButton aria-label=\"TM\" className={classes.margin} size=\"small\">\r\n                  <TelegramIcon  style={{color: '#fff'}}/>\r\n                </IconButton>\r\n              </Link>\r\n\r\n\r\n              <Link href=\"https://medium.com/@TradingPlanetEX\">\r\n                <IconButton aria-label=\"MD\" className={classes.margin} size=\"small\">\r\n                  <MediumIcon style={{color: '#fff'}}/>\r\n                </IconButton>\r\n              </Link>\r\n\r\n            </div>\r\n            <Copyright />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nFooter.propTypes = {\r\n  t: PropTypes.func.isRequired,\r\n  invert: PropTypes.bool,\r\n  toggleDir: PropTypes.func,\r\n};\r\n\r\nFooter.defaultProps = {\r\n  invert: false,\r\n  toggleDir: () => {},\r\n};\r\n\r\nexport default withTranslation(['crypto-landing'])(Footer);\r\n"]},"metadata":{},"sourceType":"module"}