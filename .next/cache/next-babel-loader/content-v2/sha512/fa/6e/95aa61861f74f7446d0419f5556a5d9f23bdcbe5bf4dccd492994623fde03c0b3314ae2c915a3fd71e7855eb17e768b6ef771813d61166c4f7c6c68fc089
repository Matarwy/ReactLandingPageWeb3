{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\TP\\\\v1\\\\TradingPlanet-Home\\\\components\\\\Header\\\\MobileMenu.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withTranslation } from \"../../i18n\";\nimport routeLink from \"../../public/text/link\";\nimport useStyles from './header-style';\nimport navMenu from './menu';\n\nfunction MobileMenu(props) {\n  const classes = useStyles();\n  const {\n    toggleDrawer,\n    open,\n    t\n  } = props;\n\n  const SideList = () => __jsx(\"div\", {\n    className: classes.mobileNav,\n    role: \"presentation\",\n    onClick: toggleDrawer,\n    onKeyDown: toggleDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: clsx(classes.menu, open && classes.menuOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(List, {\n    component: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, navMenu.map((item, index) => __jsx(ListItem, {\n    button: true,\n    component: \"a\",\n    href: `#${item}`,\n    key: index.toString(),\n    style: {\n      animationDuration: index * 0.15 + 's'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemText, {\n    primary: t('common:crypto-landing.header_' + item),\n    className: classes.menuList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }))), __jsx(ListItem, {\n    button: true,\n    component: \"a\",\n    href: routeLink.crypto.contact,\n    style: {\n      animationDuration: navMenu.length * 0.15 + 's'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(ListItemText, {\n    primary: t('common:crypto-landing.header_contact'),\n    className: classes.menuList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })), __jsx(Divider, {\n    className: classes.dividerSidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), ['login', 'register'].map((item, index) => __jsx(ListItem, {\n    button: true,\n    component: \"a\",\n    href: routeLink.crypto[item],\n    key: index.toString(),\n    style: {\n      animationDuration: navMenu.length * 0.15 + 's'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemText, {\n    primary: t('common:crypto-landing.header_' + item),\n    className: classes.menuList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }))))));\n\n  return __jsx(SwipeableDrawer, {\n    open: open,\n    onClose: toggleDrawer,\n    onOpen: toggleDrawer,\n    classes: {\n      paper: classes.paperNav\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, __jsx(SideList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }));\n}\n\nMobileMenu.propTypes = {\n  toggleDrawer: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['crypto-landing'])(MobileMenu);","map":{"version":3,"sources":["D:/projects/TP/v1/TradingPlanet-Home/components/Header/MobileMenu.js"],"names":["React","PropTypes","clsx","SwipeableDrawer","Divider","List","ListItem","ListItemText","withTranslation","routeLink","useStyles","navMenu","MobileMenu","props","classes","toggleDrawer","open","t","SideList","mobileNav","menu","menuOpen","map","item","index","toString","animationDuration","menuList","crypto","contact","length","dividerSidebar","paper","paperNav","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { withTranslation } from '~/i18n';\r\nimport routeLink from '~/public/text/link';\r\nimport useStyles from './header-style';\r\nimport navMenu from './menu';\r\n\r\nfunction MobileMenu(props) {\r\n  const classes = useStyles();\r\n  const { toggleDrawer, open, t } = props;\r\n  const SideList = () => (\r\n    <div\r\n      className={classes.mobileNav}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer}\r\n      onKeyDown={toggleDrawer}\r\n    >\r\n      <div className={clsx(classes.menu, open && classes.menuOpen)}>\r\n        <List component=\"nav\">\r\n          {navMenu.map((item, index) => (\r\n            <ListItem\r\n              button\r\n              component=\"a\"\r\n              href={`#${item}`}\r\n              key={index.toString()}\r\n              style={{ animationDuration: index * 0.15 + 's' }}\r\n            >\r\n              <ListItemText primary={t('common:crypto-landing.header_' + item)} className={classes.menuList} />\r\n            </ListItem>\r\n          ))}\r\n          <ListItem\r\n            button\r\n            component=\"a\"\r\n            href={routeLink.crypto.contact}\r\n            style={{ animationDuration: navMenu.length * 0.15 + 's' }}\r\n          >\r\n            <ListItemText primary={t('common:crypto-landing.header_contact')} className={classes.menuList} />\r\n          </ListItem>\r\n          <Divider className={classes.dividerSidebar} />\r\n          {['login', 'register'].map((item, index) => (\r\n            <ListItem\r\n              button\r\n              component=\"a\"\r\n              href={routeLink.crypto[item]}\r\n              key={index.toString()}\r\n              style={{ animationDuration: navMenu.length * 0.15 + 's' }}\r\n            >\r\n              <ListItemText primary={t('common:crypto-landing.header_' + item)} className={classes.menuList} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <SwipeableDrawer\r\n      open={open}\r\n      onClose={toggleDrawer}\r\n      onOpen={toggleDrawer}\r\n      classes={{\r\n        paper: classes.paperNav\r\n      }}\r\n    >\r\n      <SideList />\r\n    </SwipeableDrawer>\r\n  );\r\n}\r\n\r\n\r\nMobileMenu.propTypes = {\r\n  toggleDrawer: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  t: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withTranslation(['crypto-landing'])(MobileMenu);\r\n"]},"metadata":{},"sourceType":"module"}