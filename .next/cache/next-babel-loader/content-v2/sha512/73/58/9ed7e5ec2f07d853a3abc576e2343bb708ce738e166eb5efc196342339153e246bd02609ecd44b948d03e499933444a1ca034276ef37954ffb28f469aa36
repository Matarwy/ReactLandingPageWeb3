{"ast":null,"code":"import _defineProperty from \"D:/projects/TP/v1/TradingPlanet-Home/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\TP\\\\v1\\\\TradingPlanet-Home\\\\components\\\\Forms\\\\Contact.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport brand from \"../../public/text/brand\";\nimport routeLink from \"../../public/text/link\";\nimport { withTranslation } from \"../../i18n\";\nimport logo from \"../../public/images/crypto-logo.svg\";\nimport { useText } from \"../../theme/common\";\nimport Parallax from '../Parallax/Hexagonal';\nimport Decoration from './Decoration';\nimport Checkbox from './Checkbox';\nimport useStyles from './form-style';\n\nfunction Contact(props) {\n  _s();\n\n  var classes = useStyles();\n  var text = useText();\n  var t = props.t;\n  var theme = useTheme();\n  var isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  var _useState = useState({\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    message: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  useEffect(function () {\n    ValidatorForm.addValidationRule('isTruthy', function (value) {\n      return value;\n    });\n  });\n\n  var _useState2 = useState(false),\n      openNotif = _useState2[0],\n      setNotif = _useState2[1];\n\n  var _useState3 = useState(false),\n      check = _useState3[0],\n      setCheck = _useState3[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  var handleCheck = function handleCheck(event) {\n    setCheck(event.target.checked);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    setNotif(true);\n  };\n\n  var handleClose = function handleClose() {\n    setNotif(false);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.pageWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(Decoration, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: clsx(classes.parallax, classes.parallaxLeft),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(Parallax, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: clsx(classes.parallax, classes.parallaxRight),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(Parallax, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    key: \"top right\",\n    open: openNotif,\n    autoHideDuration: 4000,\n    onClose: handleClose,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    message: __jsx(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 18\n      }\n    }, \"Message Sent\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), __jsx(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: clsx(classes.logo, classes.logoHeader),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: routeLink.crypto.home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    component: \"span\",\n    className: text.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, brand.crypto.projectName)))), __jsx(Container, {\n    maxWidth: \"md\",\n    className: classes.innerWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    href: routeLink.crypto.home,\n    className: clsx(classes.backtohome, classes.invert),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(\"i\", {\n    className: \"ion-ios-home-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), __jsx(\"i\", {\n    className: \"ion-ios-arrow-round-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })), __jsx(Paper, {\n    className: clsx(classes.formBox, 'fragment-fadeUp'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.fullFromWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    align: \"center\",\n    className: clsx(classes.title, text.title),\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, t('common:contact_title2')), __jsx(Typography, {\n    className: clsx(classes.desc, text.subtitle2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, t('common:contact_subtitle')), __jsx(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(ValidatorForm, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: classes.input,\n    label: t('common:form_name'),\n    onChange: handleChange('name'),\n    name: \"Name\",\n    value: values.name,\n    validators: ['required'],\n    errorMessages: ['This field is required'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: classes.input,\n    label: t('common:form_email'),\n    onChange: handleChange('email'),\n    name: \"Email\",\n    value: values.email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['This field is required', 'email is not valid'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: classes.input,\n    label: t('common:form_phone'),\n    onChange: handleChange('phone'),\n    name: \"Phone\",\n    value: values.phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: classes.input,\n    label: t('common:form_company'),\n    onChange: handleChange('company'),\n    name: \"Company\",\n    value: values.company,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    multiline: true,\n    rows: \"6\",\n    className: classes.input,\n    label: t('common:form_message'),\n    onChange: handleChange('message'),\n    name: \"Message\",\n    value: values.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: clsx(classes.btnArea, classes.flex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      validators: ['isTruthy'],\n      errorMessages: \"This field is required\",\n      checked: check,\n      value: check,\n      onChange: function onChange(e) {\n        return handleCheck(e);\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 23\n      }\n    }),\n    label: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    }, t('common:form_terms'), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }), __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, t('common:form_privacy'))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    fullWidth: isMobile,\n    type: \"submit\",\n    color: \"secondary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, t('common:form_send')))))))));\n}\n\n_s(Contact, \"m7IDPDmv3UXqcbLfkoQKzy8Z3Fg=\", false, function () {\n  return [useStyles, useText, useTheme, useMediaQuery];\n});\n\n_c = Contact;\nContact.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['common'])(Contact);\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["D:/projects/TP/v1/TradingPlanet-Home/components/Forms/Contact.js"],"names":["React","useState","useEffect","PropTypes","clsx","Button","Hidden","useMediaQuery","useTheme","IconButton","FormControlLabel","Paper","Container","Grid","Typography","Snackbar","ValidatorForm","TextValidator","brand","routeLink","withTranslation","logo","useText","Parallax","Decoration","Checkbox","useStyles","Contact","props","classes","text","t","theme","isMobile","breakpoints","down","name","email","phone","company","message","values","setValues","addValidationRule","value","openNotif","setNotif","check","setCheck","handleChange","event","target","handleCheck","checked","handleSubmit","handleClose","pageWrap","parallax","parallaxLeft","parallaxRight","vertical","horizontal","logoHeader","crypto","home","title","projectName","innerWrap","backtohome","invert","formBox","fullFromWrap","desc","subtitle2","form","input","btnArea","flex","e","propTypes","func","isRequired"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,MAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,MAAMI,IAAI,GAAGR,OAAO,EAApB;AAFsB,MAGdS,CAHc,GAGRH,KAHQ,CAGdG,CAHc;AAItB,MAAMC,KAAK,GAAGxB,QAAQ,EAAtB;AACA,MAAMyB,QAAQ,GAAG1B,aAAa,CAACyB,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAA9B;;AALsB,kBAMMlC,QAAQ,CAAC;AACnCmC,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,OAAO,EAAE,EAJ0B;AAKnCC,IAAAA,OAAO,EAAE;AAL0B,GAAD,CANd;AAAA,MAMfC,MANe;AAAA,MAMPC,SANO;;AActBxC,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,aAAa,CAAC2B,iBAAd,CAAgC,UAAhC,EAA4C,UAAAC,KAAK;AAAA,aAAIA,KAAJ;AAAA,KAAjD;AACD,GAFQ,CAAT;;AAdsB,mBAkBQ3C,QAAQ,CAAC,KAAD,CAlBhB;AAAA,MAkBf4C,SAlBe;AAAA,MAkBJC,QAlBI;;AAAA,mBAoBI7C,QAAQ,CAAC,KAAD,CApBZ;AAAA,MAoBf8C,KApBe;AAAA,MAoBRC,QApBQ;;AAsBtB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAb,IAAI;AAAA,WAAI,UAAAc,KAAK,EAAI;AACpCR,MAAAA,SAAS,iCAAMD,MAAN,2BAAeL,IAAf,EAAsBc,KAAK,CAACC,MAAN,CAAaP,KAAnC,GAAT;AACD,KAFwB;AAAA,GAAzB;;AAIA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,CAAAF,KAAK,EAAI;AAC3BF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaE,OAAd,CAAR;AACD,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBR,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,MAAMS,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBT,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAAC2B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAEpD,IAAI,CAACyB,OAAO,CAAC4B,QAAT,EAAmB5B,OAAO,CAAC6B,YAA3B,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE;AAAK,IAAA,SAAS,EAAEtD,IAAI,CAACyB,OAAO,CAAC4B,QAAT,EAAmB5B,OAAO,CAAC8B,aAA3B,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EAQE,MAAC,QAAD;AACE,IAAA,YAAY,EAAE;AAAEC,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KADhB;AAEE,IAAA,GAAG,EAAC,WAFN;AAGE,IAAA,IAAI,EAAEhB,SAHR;AAIE,IAAA,gBAAgB,EAAE,IAJpB;AAKE,IAAA,OAAO,EAAEU,WALX;AAME,IAAA,YAAY,EAAE;AACZ,0BAAoB;AADR,KANhB;AASE,IAAA,OAAO,EAAE;AAAM,MAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAmBE,MAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEnD,IAAI,CAACyB,OAAO,CAACR,IAAT,EAAeQ,OAAO,CAACiC,UAAvB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAE3C,SAAS,CAAC4C,MAAV,CAAiBC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAE3C,IAAV;AAAgB,IAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAA6B,IAAA,SAAS,EAAES,IAAI,CAACmC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/C,KAAK,CAAC6C,MAAN,CAAaG,WADhB,CAFF,CADF,CADF,CAnBF,EA6BE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAErC,OAAO,CAACsC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEhD,SAAS,CAAC4C,MAAV,CAAiBC,IAAnC;AAAyC,IAAA,SAAS,EAAE5D,IAAI,CAACyB,OAAO,CAACuC,UAAT,EAAqBvC,OAAO,CAACwC,MAA7B,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEjE,IAAI,CAACyB,OAAO,CAACyC,OAAT,EAAkB,iBAAlB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEzC,OAAO,CAAC0C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,OAAO,EAAC,IADV;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAEnE,IAAI,CAACyB,OAAO,CAACoC,KAAT,EAAgBnC,IAAI,CAACmC,KAArB,CAHjB;AAIE,IAAA,YAAY,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGlC,CAAC,CAAC,uBAAD,CANJ,CADF,EASE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE3B,IAAI,CAACyB,OAAO,CAAC2C,IAAT,EAAe1C,IAAI,CAAC2C,SAApB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1C,CAAC,CAAC,yBAAD,CADJ,CATF,EAYE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAAC6C,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,QAAQ,EAAEpB,YADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,OAAO,EAAC,QADV;AAEE,IAAA,SAAS,EAAEzB,OAAO,CAAC8C,KAFrB;AAGE,IAAA,KAAK,EAAE5C,CAAC,CAAC,kBAAD,CAHV;AAIE,IAAA,QAAQ,EAAEkB,YAAY,CAAC,MAAD,CAJxB;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,KAAK,EAAER,MAAM,CAACL,IANhB;AAOE,IAAA,UAAU,EAAE,CAAC,UAAD,CAPd;AAQE,IAAA,aAAa,EAAE,CAAC,wBAAD,CARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAaE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,OAAO,EAAC,QADV;AAEE,IAAA,SAAS,EAAEP,OAAO,CAAC8C,KAFrB;AAGE,IAAA,KAAK,EAAE5C,CAAC,CAAC,mBAAD,CAHV;AAIE,IAAA,QAAQ,EAAEkB,YAAY,CAAC,OAAD,CAJxB;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,KAAK,EAAER,MAAM,CAACJ,KANhB;AAOE,IAAA,UAAU,EAAE,CAAC,UAAD,EAAa,SAAb,CAPd;AAQE,IAAA,aAAa,EAAE,CAAC,wBAAD,EAA2B,oBAA3B,CARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,EAyBE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,OAAO,EAAC,QADV;AAEE,IAAA,SAAS,EAAER,OAAO,CAAC8C,KAFrB;AAGE,IAAA,KAAK,EAAE5C,CAAC,CAAC,mBAAD,CAHV;AAIE,IAAA,QAAQ,EAAEkB,YAAY,CAAC,OAAD,CAJxB;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,KAAK,EAAER,MAAM,CAACH,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzBF,EAmCE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,OAAO,EAAC,QADV;AAEE,IAAA,SAAS,EAAET,OAAO,CAAC8C,KAFrB;AAGE,IAAA,KAAK,EAAE5C,CAAC,CAAC,qBAAD,CAHV;AAIE,IAAA,QAAQ,EAAEkB,YAAY,CAAC,SAAD,CAJxB;AAKE,IAAA,IAAI,EAAC,SALP;AAME,IAAA,KAAK,EAAER,MAAM,CAACF,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnCF,EA6CE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,OAAO,EAAC,QADV;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,IAAI,EAAC,GAHP;AAIE,IAAA,SAAS,EAAEV,OAAO,CAAC8C,KAJrB;AAKE,IAAA,KAAK,EAAE5C,CAAC,CAAC,qBAAD,CALV;AAME,IAAA,QAAQ,EAAEkB,YAAY,CAAC,SAAD,CANxB;AAOE,IAAA,IAAI,EAAC,SAPP;AAQE,IAAA,KAAK,EAAER,MAAM,CAACD,OARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA7CF,CAHF,EA6DE;AAAK,IAAA,SAAS,EAAEpC,IAAI,CAACyB,OAAO,CAAC+C,OAAT,EAAkB/C,OAAO,CAACgD,IAA1B,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,OAAO,EACL,MAAC,QAAD;AACE,MAAA,UAAU,EAAE,CAAC,UAAD,CADd;AAEE,MAAA,aAAa,EAAC,wBAFhB;AAGE,MAAA,OAAO,EAAE9B,KAHX;AAIE,MAAA,KAAK,EAAEA,KAJT;AAKE,MAAA,QAAQ,EAAE,kBAAC+B,CAAD;AAAA,eAAO1B,WAAW,CAAC0B,CAAD,CAAlB;AAAA,OALZ;AAME,MAAA,KAAK,EAAC,SANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAWE,IAAA,KAAK,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG/C,CAAC,CAAC,mBAAD,CADJ,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CAAC,CAAC,qBAAD,CADJ,CAHF,CAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAsBE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,SAAS,EAAEE,QAAvC;AAAiD,IAAA,IAAI,EAAC,QAAtD;AAA+D,IAAA,KAAK,EAAC,WAArE;AAAiF,IAAA,IAAI,EAAC,OAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,CAAC,CAAC,kBAAD,CADJ,CAtBF,CA7DF,CADF,CAZF,CADF,CALF,CA7BF,CADF;AA+ID;;GArLQJ,O;UACSD,S,EACHJ,O,EAECd,Q,EACGD,a;;;KALVoB,O;AAuLTA,OAAO,CAACoD,SAAR,GAAoB;AAClBhD,EAAAA,CAAC,EAAE5B,SAAS,CAAC6E,IAAV,CAAeC;AADA,CAApB;AAIA,eAAe7D,eAAe,CAAC,CAAC,QAAD,CAAD,CAAf,CAA4BO,OAA5B,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport brand from '~/public/text/brand';\r\nimport routeLink from '~/public/text/link';\r\nimport { withTranslation } from '~/i18n';\r\nimport logo from '~/public/images/crypto-logo.svg';\r\nimport { useText } from '~/theme/common';\r\nimport Parallax from '../Parallax/Hexagonal';\r\nimport Decoration from './Decoration';\r\nimport Checkbox from './Checkbox';\r\nimport useStyles from './form-style';\r\n\r\nfunction Contact(props) {\r\n  const classes = useStyles();\r\n  const text = useText();\r\n  const { t } = props;\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    company: '',\r\n    message: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule('isTruthy', value => value);\r\n  });\r\n\r\n  const [openNotif, setNotif] = useState(false);\r\n\r\n  const [check, setCheck] = useState(false);\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const handleCheck = event => {\r\n    setCheck(event.target.checked);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setNotif(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setNotif(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.pageWrap}>\r\n      <Decoration />\r\n      <div className={clsx(classes.parallax, classes.parallaxLeft)}>\r\n        <Parallax />\r\n      </div>\r\n      <div className={clsx(classes.parallax, classes.parallaxRight)}>\r\n        <Parallax />\r\n      </div>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        key=\"top right\"\r\n        open={openNotif}\r\n        autoHideDuration={4000}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id=\"message-id\">Message Sent</span>}\r\n      />\r\n      <Hidden mdUp>\r\n        <div className={clsx(classes.logo, classes.logoHeader)}>\r\n          <a href={routeLink.crypto.home}>\r\n            <img src={logo} alt=\"logo\" />\r\n            <Typography component=\"span\" className={text.title}>\r\n              {brand.crypto.projectName}\r\n            </Typography>\r\n          </a>\r\n        </div>\r\n      </Hidden>\r\n      <Container maxWidth=\"md\" className={classes.innerWrap}>\r\n        <IconButton href={routeLink.crypto.home} className={clsx(classes.backtohome, classes.invert)}>\r\n          <i className=\"ion-ios-home-outline\" />\r\n          <i className=\"ion-ios-arrow-round-back\" />\r\n        </IconButton>\r\n        <Paper className={clsx(classes.formBox, 'fragment-fadeUp')}>\r\n          <div className={classes.fullFromWrap}>\r\n            <Typography\r\n              variant=\"h3\"\r\n              align=\"center\"\r\n              className={clsx(classes.title, text.title)}\r\n              gutterBottom\r\n            >\r\n              {t('common:contact_title2')}\r\n            </Typography>\r\n            <Typography className={clsx(classes.desc, text.subtitle2)}>\r\n              {t('common:contact_subtitle')}\r\n            </Typography>\r\n            <div className={classes.form}>\r\n              <ValidatorForm\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <Grid container spacing={6}>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextValidator\r\n                      variant=\"filled\"\r\n                      className={classes.input}\r\n                      label={t('common:form_name')}\r\n                      onChange={handleChange('name')}\r\n                      name=\"Name\"\r\n                      value={values.name}\r\n                      validators={['required']}\r\n                      errorMessages={['This field is required']}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextValidator\r\n                      variant=\"filled\"\r\n                      className={classes.input}\r\n                      label={t('common:form_email')}\r\n                      onChange={handleChange('email')}\r\n                      name=\"Email\"\r\n                      value={values.email}\r\n                      validators={['required', 'isEmail']}\r\n                      errorMessages={['This field is required', 'email is not valid']}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextValidator\r\n                      variant=\"filled\"\r\n                      className={classes.input}\r\n                      label={t('common:form_phone')}\r\n                      onChange={handleChange('phone')}\r\n                      name=\"Phone\"\r\n                      value={values.phone}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextValidator\r\n                      variant=\"filled\"\r\n                      className={classes.input}\r\n                      label={t('common:form_company')}\r\n                      onChange={handleChange('company')}\r\n                      name=\"Company\"\r\n                      value={values.company}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextValidator\r\n                      variant=\"filled\"\r\n                      multiline\r\n                      rows=\"6\"\r\n                      className={classes.input}\r\n                      label={t('common:form_message')}\r\n                      onChange={handleChange('message')}\r\n                      name=\"Message\"\r\n                      value={values.message}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <div className={clsx(classes.btnArea, classes.flex)}>\r\n                  <FormControlLabel\r\n                    control={(\r\n                      <Checkbox\r\n                        validators={['isTruthy']}\r\n                        errorMessages=\"This field is required\"\r\n                        checked={check}\r\n                        value={check}\r\n                        onChange={(e) => handleCheck(e)}\r\n                        color=\"primary\"\r\n                      />\r\n                    )}\r\n                    label={(\r\n                      <span>\r\n                        {t('common:form_terms')}\r\n                        <br />\r\n                        <a href=\"#\">\r\n                          {t('common:form_privacy')}\r\n                        </a>\r\n                      </span>\r\n                    )}\r\n                  />\r\n                  <Button variant=\"contained\" fullWidth={isMobile} type=\"submit\" color=\"secondary\" size=\"large\">\r\n                    {t('common:form_send')}\r\n                  </Button>\r\n                </div>\r\n              </ValidatorForm>\r\n            </div>\r\n          </div>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  t: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation(['common'])(Contact);\r\n"]},"metadata":{},"sourceType":"module"}