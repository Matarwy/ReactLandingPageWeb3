{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\TP\\\\v1\\\\TradingPlanet-Home\\\\components\\\\Notification\\\\Notification.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Slide from '@material-ui/core/Slide';\nimport useStyles from './notification-style';\nimport { withTranslation } from \"../../i18n\";\n\nfunction TransitionUp(props) {\n  return __jsx(Slide, _extends({}, props, {\n    direction: \"up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction Notification(props) {\n  const {\n    t\n  } = props;\n  const classes = useStyles();\n  const {\n    0: open,\n    1: setOpen\n  } = useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return __jsx(Snackbar, {\n    TransitionComponent: TransitionUp,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    classes: {\n      root: classes.notification\n    },\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(SnackbarContent, {\n    message: __jsx(Typography, {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }\n    }, t('common:notif_msg')),\n    classes: {\n      action: classes.action\n    },\n    action: __jsx(Button, {\n      color: \"secondary\",\n      variant: \"contained\",\n      className: classes.button,\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, t('common:accept')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n}\n\nNotification.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['common'])(Notification);","map":{"version":3,"sources":["D:/projects/TP/v1/TradingPlanet-Home/components/Notification/Notification.js"],"names":["React","useState","PropTypes","Button","Typography","Snackbar","SnackbarContent","Slide","useStyles","withTranslation","TransitionUp","props","Notification","t","classes","open","setOpen","handleClose","vertical","horizontal","root","notification","action","button","propTypes","func","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,eAAT,QAAgC,YAAhC;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAO,MAAC,KAAD,eAAWA,KAAX;AAAkB,IAAA,SAAS,EAAC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,SAASC,YAAT,CAAsBD,KAAtB,EAA6B;AAC3B,QAAM;AAAEE,IAAAA;AAAF,MAAQF,KAAd;AACA,QAAMG,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM;AAAA,OAACO,IAAD;AAAA,OAAOC;AAAP,MAAkBf,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMgB,WAAW,GAAG,MAAM;AACxBD,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAGA,SACE,MAAC,QAAD;AACE,IAAA,mBAAmB,EAAEN,YADvB;AAEE,IAAA,YAAY,EAAE;AACZQ,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KAFhB;AAME,IAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEN,OAAO,CAACO;AADP,KANX;AASE,IAAA,IAAI,EAAEN,IATR;AAUE,IAAA,OAAO,EAAEE,WAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,MAAC,eAAD;AACE,IAAA,OAAO,EAAE,MAAC,UAAD;AAAY,MAAA,EAAE,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BJ,CAAC,CAAC,kBAAD,CAA9B,CADX;AAEE,IAAA,OAAO,EAAE;AACPS,MAAAA,MAAM,EAAER,OAAO,CAACQ;AADT,KAFX;AAKE,IAAA,MAAM,EACJ,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAC,WAAlC;AAA8C,MAAA,SAAS,EAAER,OAAO,CAACS,MAAjE;AAAyE,MAAA,OAAO,EAAEN,WAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,CAAC,CAAC,eAAD,CADJ,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AA0BD;;AAEDD,YAAY,CAACY,SAAb,GAAyB;AACvBX,EAAAA,CAAC,EAAEX,SAAS,CAACuB,IAAV,CAAeC;AADK,CAAzB;AAIA,eAAejB,eAAe,CAAC,CAAC,QAAD,CAAD,CAAf,CAA4BG,YAA5B,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport useStyles from './notification-style';\r\nimport { withTranslation } from '~/i18n';\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction Notification(props) {\r\n  const { t } = props;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <Snackbar\r\n      TransitionComponent={TransitionUp}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      classes={{\r\n        root: classes.notification,\r\n      }}\r\n      open={open}\r\n      onClose={handleClose}\r\n    >\r\n      <SnackbarContent\r\n        message={<Typography id=\"message-id\">{t('common:notif_msg')}</Typography>}\r\n        classes={{\r\n          action: classes.action\r\n        }}\r\n        action={(\r\n          <Button color=\"secondary\" variant=\"contained\" className={classes.button} onClick={handleClose}>\r\n            {t('common:accept')}\r\n          </Button>\r\n        )}\r\n      />\r\n    </Snackbar>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  t: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withTranslation(['common'])(Notification);\r\n"]},"metadata":{},"sourceType":"module"}