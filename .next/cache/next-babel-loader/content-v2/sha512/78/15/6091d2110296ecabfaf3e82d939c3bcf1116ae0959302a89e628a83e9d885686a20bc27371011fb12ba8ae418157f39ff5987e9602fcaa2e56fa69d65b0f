{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\TP\\\\v1\\\\TradingPlanet-Home\\\\components\\\\Promotion\\\\Promotion.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport NextIcon from '@material-ui/icons/ArrowForward';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Slider from 'react-animated-slider';\nimport useStyles from './promotion-style';\nimport imgAPI from \"../../public/images/imgAPI\";\nimport { withTranslation } from \"../../i18n\";\nconst sliderData = [{\n  image: \"/images/crypto/trade.png\",\n  desc: \"prelaunch marketing, company and software development\",\n  date: 'May 2021'\n}, {\n  image: \"/images/crypto/trade.png\",\n  desc: \"Marketing and community development\",\n  date: 'June 2021'\n}, {\n  image: \"/images/crypto/trade.png\",\n  desc: \"launch trading planet swap platform\",\n  date: 'OCT 2021'\n}, {\n  image: \"/images/crypto/trade.png\",\n  desc: \"Launch presale on dexale\",\n  date: 'NOV 2021'\n}, {\n  image: \"/images/crypto/trade.png\",\n  desc: \"launch other features to swap platform\",\n  date: 'Dec 2021'\n}, {\n  image: \"/images/crypto/trade.png\",\n  desc: \"TP will be listed on CMC coingecko and centralia zed platform\",\n  date: 'Q1 2022'\n}, {\n  image: \"/images/crypto/trade.png\",\n  desc: \"launch trading planet centralized platform\",\n  date: 'Q2 2022'\n}, {\n  image: \"/images/crypto/trade.png\",\n  desc: \"launch other features to swap platform\",\n  date: 'Dec 2021'\n}, {\n  image: \"/images/crypto/trade.png\",\n  desc: \"launch other features to swap platform\",\n  date: 'Dec 2021'\n}];\n\nfunction Promotion(props) {\n  const classes = useStyles();\n  const {\n    t\n  } = props;\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.sliderWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(Slider, {\n    className: \"slider-wrapper\",\n    previousButton: __jsx(NextIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }),\n    nextButton: __jsx(NextIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, sliderData.map((item, index) => __jsx(\"div\", {\n    className: clsx(classes.item, index % 2 === 1 ? classes.odd : classes.even),\n    key: index.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"\\xA0\"), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, __jsx(Hidden, {\n    mdDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: classes.imgWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    className: classes.decoration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }), __jsx(\"figure\", {\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    src: item.image,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 27\n    }\n  }))))), __jsx(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, __jsx(Typography, {\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, item.desc), __jsx(\"section\", {\n    className: classes.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    component: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  }, t('common:crypto-landing.promo_periode'), \":\\xA0\", item.date))))))))));\n}\n\nPromotion.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['crypto-landing'])(Promotion);","map":{"version":3,"sources":["D:/projects/TP/v1/TradingPlanet-Home/components/Promotion/Promotion.js"],"names":["React","PropTypes","clsx","Grid","Hidden","ButtonBase","NextIcon","Typography","Paper","Slider","useStyles","imgAPI","withTranslation","sliderData","image","desc","date","Promotion","props","classes","t","root","sliderWrap","map","item","index","odd","even","toString","imgWrap","decoration","title","paper","time","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport NextIcon from '@material-ui/icons/ArrowForward';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slider from 'react-animated-slider';\r\nimport useStyles from './promotion-style';\r\nimport imgAPI from '~/public/images/imgAPI';\r\nimport { withTranslation } from '~/i18n';\r\n\r\nconst sliderData = [\r\n  {\r\n    image: \"/images/crypto/trade.png\",\r\n    desc: \"prelaunch marketing, company and software development\",\r\n    date: 'May 2021'\r\n  },\r\n  {\r\n    image: \"/images/crypto/trade.png\",\r\n    desc: \"Marketing and community development\",\r\n    date: 'June 2021'\r\n  },\r\n  {\r\n    image: \"/images/crypto/trade.png\",\r\n    desc: \"launch trading planet swap platform\",\r\n    date: 'OCT 2021'\r\n  },\r\n  {\r\n    image: \"/images/crypto/trade.png\",\r\n    desc: \"Launch presale on dexale\",\r\n    date: 'NOV 2021'\r\n  },\r\n  {\r\n    image: \"/images/crypto/trade.png\",\r\n    desc: \"launch other features to swap platform\",\r\n    date: 'Dec 2021'\r\n  },\r\n  {\r\n    image: \"/images/crypto/trade.png\",\r\n    desc: \"TP will be listed on CMC coingecko and centralia zed platform\",\r\n    date: 'Q1 2022'\r\n  },\r\n  {\r\n    image: \"/images/crypto/trade.png\",\r\n    desc: \"launch trading planet centralized platform\",\r\n    date: 'Q2 2022'\r\n  },\r\n  {\r\n    image: \"/images/crypto/trade.png\",\r\n    desc: \"launch other features to swap platform\",\r\n    date: 'Dec 2021'\r\n  },\r\n  {\r\n    image: \"/images/crypto/trade.png\",\r\n    desc: \"launch other features to swap platform\",\r\n    date: 'Dec 2021'\r\n  },\r\n];\r\n\r\nfunction Promotion(props) {\r\n  const classes = useStyles();\r\n  const { t } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.sliderWrap}>\r\n        <Slider\r\n          className=\"slider-wrapper\"\r\n          previousButton={(\r\n            <NextIcon />\r\n          )}\r\n          nextButton={(\r\n            <NextIcon />\r\n          )}\r\n        >\r\n          {sliderData.map((item, index) => (\r\n            <div className={clsx(classes.item, index % 2 === 1 ? classes.odd : classes.even)} key={index.toString()}>\r\n              <Grid container>\r\n                <Grid item xs={12} lg={4}>\r\n                  &nbsp;\r\n                </Grid>\r\n                <Grid item xs={12} lg={7}>\r\n                  <Hidden mdDown>\r\n                    <section>\r\n                      <div className={classes.imgWrap}>\r\n                        <div className={classes.decoration}>\r\n                          {/* <svg> */}\r\n                            {/* <use xlinkHref=\"/en/images/crypto/deco-promo.png\" /> */}\r\n                          {/* </svg> */}\r\n                        </div>\r\n                        <figure className={classes.image}>\r\n                          <img src={item.image} alt={item.title} />\r\n                        </figure>\r\n                      </div>\r\n                    </section>\r\n                  </Hidden>\r\n                  <Paper className={classes.paper}>\r\n                    {/* <Typography variant=\"h1\">\r\n                      <ButtonBase>\r\n                        {item.title}\r\n                      </ButtonBase>\r\n                    </Typography> */}\r\n                    <Typography component=\"p\">\r\n                      {item.desc}\r\n                    </Typography>\r\n                    <section className={classes.time}>\r\n                      <Typography component=\"h6\">\r\n                        {t('common:crypto-landing.promo_periode')}\r\n                        :&nbsp;\r\n                        {item.date}\r\n                      </Typography>\r\n                    </section>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          ))}\r\n        </Slider>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPromotion.propTypes = {\r\n  t: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation(['crypto-landing'])(Promotion);\r\n"]},"metadata":{},"sourceType":"module"}