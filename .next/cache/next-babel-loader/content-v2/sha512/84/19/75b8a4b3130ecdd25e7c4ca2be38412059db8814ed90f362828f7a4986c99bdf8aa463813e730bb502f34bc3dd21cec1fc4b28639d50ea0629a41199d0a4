{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\TP\\\\v1\\\\TradingPlanet-Home\\\\components\\\\Faq\\\\Faq.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport { withTranslation } from \"../../i18n\";\nimport { useText } from \"../../theme/common\";\nimport Parallax from '../Parallax/Hexagonal';\nimport Title from '../Title';\nimport useStyles from './faq-style';\nconst faqData = [{\n  q: 'What is TP?',\n  a: 'Vivamus sit amet interdum elit. Proin lacinia erat ac velit tempus auctor. '\n}, {\n  q: 'In mi nulla, fringilla vestibulum?',\n  a: 'Vivamus sit amet interdum elit. Proin lacinia erat ac velit tempus auctor. '\n}, {\n  q: 'Quisque lacinia purus ut libero?',\n  a: 'Vivamus sit amet interdum elit. Proin lacinia erat ac velit tempus auctor. '\n}, {\n  q: 'Quisque ut metus sit amet augue?',\n  a: 'Vivamus sit amet interdum elit. Proin lacinia erat ac velit tempus auctor. '\n}, {\n  q: 'Pellentesque ac bibendum tortor?',\n  a: 'Vivamus sit amet interdum elit. Proin lacinia erat ac velit tempus auctor. '\n}];\n\nfunction Faq(props) {\n  const classes = useStyles();\n  const text = useText();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const {\n    t\n  } = props;\n  const [expanded, setExpanded] = React.useState(0);\n\n  const handleChange = panel => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.parallax,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(Parallax, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), __jsx(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(Title, {\n    text: t('common:crypto-landing.faq_title'),\n    align: isMobile ? 'center' : 'left',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    className: text.subtitle2,\n    align: isMobile ? 'center' : 'left',\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, t('common:crypto-landing.faq_subtitle')), __jsx(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: classes.illustration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/crypto/faq.png\",\n    alt: \"illustration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.accordion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, faqData.map((item, index) => __jsx(\"div\", {\n    className: classes.item,\n    key: index.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, __jsx(Accordion, {\n    classes: {\n      root: classes.paper\n    },\n    expanded: expanded === index,\n    onChange: handleChange(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, __jsx(AccordionSummary, {\n    classes: {\n      content: classes.content,\n      expanded: classes.expanded\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, item.q), __jsx(ExpandMoreIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }\n  })), __jsx(AccordionDetails, {\n    classes: {\n      root: classes.detail\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }, item.a))))))))));\n}\n\nFaq.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['crypto-landing'])(Faq);","map":{"version":3,"sources":["D:/projects/TP/v1/TradingPlanet-Home/components/Faq/Faq.js"],"names":["React","PropTypes","Container","useMediaQuery","useTheme","Grid","Hidden","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","Typography","withTranslation","useText","Parallax","Title","useStyles","faqData","q","a","Faq","props","classes","text","theme","isMobile","breakpoints","down","t","expanded","setExpanded","useState","handleChange","panel","event","newExpanded","root","parallax","subtitle2","illustration","accordion","map","item","index","toString","paper","content","heading","icon","detail","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container from '@material-ui/core/Container';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withTranslation } from '~/i18n';\r\nimport { useText } from '~/theme/common';\r\nimport Parallax from '../Parallax/Hexagonal';\r\nimport Title from '../Title';\r\nimport useStyles from './faq-style';\r\n\r\nconst faqData = [\r\n  {\r\n    q: 'What is TP?',\r\n    a: 'Vivamus sit amet interdum elit. Proin lacinia erat ac velit tempus auctor. '\r\n  },\r\n  {\r\n    q: 'In mi nulla, fringilla vestibulum?',\r\n    a: 'Vivamus sit amet interdum elit. Proin lacinia erat ac velit tempus auctor. '\r\n  },\r\n  {\r\n    q: 'Quisque lacinia purus ut libero?',\r\n    a: 'Vivamus sit amet interdum elit. Proin lacinia erat ac velit tempus auctor. '\r\n  },\r\n  {\r\n    q: 'Quisque ut metus sit amet augue?',\r\n    a: 'Vivamus sit amet interdum elit. Proin lacinia erat ac velit tempus auctor. '\r\n  },\r\n  {\r\n    q: 'Pellentesque ac bibendum tortor?',\r\n    a: 'Vivamus sit amet interdum elit. Proin lacinia erat ac velit tempus auctor. '\r\n  },\r\n];\r\n\r\nfunction Faq(props) {\r\n  const classes = useStyles();\r\n  const text = useText();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const { t } = props;\r\n  const [expanded, setExpanded] = React.useState(0);\r\n  const handleChange = panel => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.parallax}>\r\n        <Parallax />\r\n      </div>\r\n      <Container fixed>\r\n        <Grid container spacing={6}>\r\n          <Grid item md={6}>\r\n            <Title text={t('common:crypto-landing.faq_title')} align={isMobile ? 'center' : 'left'} />\r\n            <Typography className={text.subtitle2} align={isMobile ? 'center' : 'left'} component=\"p\">\r\n              {t('common:crypto-landing.faq_subtitle')}\r\n            </Typography>\r\n            <Hidden smDown>\r\n              <div className={classes.illustration}>\r\n                <img src=\"/images/crypto/faq.png\" alt=\"illustration\" />\r\n              </div>\r\n            </Hidden>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <div className={classes.accordion}>\r\n              {faqData.map((item, index) => (\r\n                <div className={classes.item} key={index.toString()}>\r\n                  <Accordion\r\n                    classes={{\r\n                      root: classes.paper\r\n                    }}\r\n                    expanded={expanded === index}\r\n                    onChange={handleChange(index)}\r\n                  >\r\n                    <AccordionSummary\r\n                      classes={{\r\n                        content: classes.content,\r\n                        expanded: classes.expanded,\r\n                      }}\r\n                    >\r\n                      <Typography className={classes.heading}>{item.q}</Typography>\r\n                      <ExpandMoreIcon className={classes.icon} />\r\n                    </AccordionSummary>\r\n                    <AccordionDetails\r\n                      classes={{\r\n                        root: classes.detail,\r\n                      }}\r\n                    >\r\n                      <Typography>\r\n                        {item.a}\r\n                      </Typography>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nFaq.propTypes = {\r\n  t: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation(['crypto-landing'])(Faq);\r\n"]},"metadata":{},"sourceType":"module"}