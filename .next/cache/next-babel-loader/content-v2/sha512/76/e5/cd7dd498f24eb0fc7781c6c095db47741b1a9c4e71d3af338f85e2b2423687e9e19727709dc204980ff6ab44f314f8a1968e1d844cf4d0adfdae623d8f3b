{"ast":null,"code":"import _slicedToArray from \"D:/projects/TP/v1/TradingPlanet-Home/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\TP\\\\v1\\\\TradingPlanet-Home\\\\components\\\\Faq\\\\Faq.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport { withTranslation } from \"../../i18n\";\nimport { useText } from \"../../theme/common\";\nimport Parallax from '../Parallax/Hexagonal';\nimport Title from '../Title';\nimport useStyles from './faq-style';\nvar faqData = [{\n  q: 'Is the TP coin ERC-20 compatible?',\n  a: 'Yes, TP Coin is based on the BSC blockchain platform and ERC-20 compatible.'\n}, {\n  q: 'Am I buying on my own Risk?',\n  a: 'Because it is a decentralized platform Token  that has solutions for many issues related to security, privacy, speed of transections, in addition to very low fees. Do not forget  that our limit is the sky!'\n}, {\n  q: 'Where and how do I keep my TP Coin?',\n  a: 'You can keep your TP Token in Trading Planet wallet and in every wallet Which is BSC compatible and supports the TP Token'\n}, {\n  q: 'Is there a refund rule?',\n  a: ' No. It is not refundable.'\n}];\n\nfunction Faq(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  var text = useText();\n  var theme = useTheme();\n  var isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  var t = props.t;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  var handleChange = function handleChange(panel) {\n    return function (event, newExpanded) {\n      setExpanded(newExpanded ? panel : false);\n    };\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.parallax,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Parallax, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), __jsx(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(Title, {\n    text: t('common:crypto-landing.faq_title'),\n    align: isMobile ? 'center' : 'left',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    className: text.subtitle2,\n    align: isMobile ? 'center' : 'left',\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, t('common:crypto-landing.faq_subtitle')), __jsx(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: classes.illustration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/498-[Converted].png\",\n    alt: \"illustration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.accordion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, faqData.map(function (item, index) {\n    return __jsx(\"div\", {\n      className: classes.item,\n      key: index.toString(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, __jsx(Accordion, {\n      classes: {\n        root: classes.paper\n      },\n      expanded: expanded === index,\n      onChange: handleChange(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, __jsx(AccordionSummary, {\n      classes: {\n        content: classes.content,\n        expanded: classes.expanded\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      className: classes.heading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 23\n      }\n    }, item.q), __jsx(ExpandMoreIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    })), __jsx(AccordionDetails, {\n      classes: {\n        root: classes.detail\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, __jsx(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }\n    }, item.a))));\n  }))))));\n}\n\n_s(Faq, \"WHu99WNOfMqe3ctdWS97bww6uj4=\", false, function () {\n  return [useStyles, useText, useTheme, useMediaQuery];\n});\n\n_c = Faq;\nFaq.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['crypto-landing'])(Faq);\n\nvar _c;\n\n$RefreshReg$(_c, \"Faq\");","map":{"version":3,"sources":["D:/projects/TP/v1/TradingPlanet-Home/components/Faq/Faq.js"],"names":["React","PropTypes","Container","useMediaQuery","useTheme","Grid","Hidden","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","Typography","withTranslation","useText","Parallax","Title","useStyles","faqData","q","a","Faq","props","classes","text","theme","isMobile","breakpoints","down","t","useState","expanded","setExpanded","handleChange","panel","event","newExpanded","root","parallax","subtitle2","illustration","accordion","map","item","index","toString","paper","content","heading","icon","detail","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container from '@material-ui/core/Container';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withTranslation } from '~/i18n';\r\nimport { useText } from '~/theme/common';\r\nimport Parallax from '../Parallax/Hexagonal';\r\nimport Title from '../Title';\r\nimport useStyles from './faq-style';\r\n\r\nconst faqData = [\r\n  {\r\n    q: 'Is the TP coin ERC-20 compatible?',\r\n    a: 'Yes, TP Coin is based on the BSC blockchain platform and ERC-20 compatible.'\r\n  },\r\n  {\r\n    q: 'Am I buying on my own Risk?',\r\n    a: 'Because it is a decentralized platform Token  that has solutions for many issues related to security, privacy, speed of transections, in addition to very low fees. Do not forget  that our limit is the sky!'\r\n  },\r\n  {\r\n    q: 'Where and how do I keep my TP Coin?',\r\n    a: 'You can keep your TP Token in Trading Planet wallet and in every wallet Which is BSC compatible and supports the TP Token'\r\n  },\r\n  {\r\n    q: 'Is there a refund rule?',\r\n    a: ' No. It is not refundable.'\r\n  }\r\n];\r\n\r\nfunction Faq(props) {\r\n  const classes = useStyles();\r\n  const text = useText();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const { t } = props;\r\n  const [expanded, setExpanded] = React.useState(0);\r\n  const handleChange = panel => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.parallax}>\r\n        <Parallax />\r\n      </div>\r\n      <Container fixed>\r\n        <Grid container spacing={6}>\r\n          <Grid item md={6}>\r\n            <Title text={t('common:crypto-landing.faq_title')} align={isMobile ? 'center' : 'left'} />\r\n            <Typography className={text.subtitle2} align={isMobile ? 'center' : 'left'} component=\"p\">\r\n              {t('common:crypto-landing.faq_subtitle')}\r\n            </Typography>\r\n            <Hidden smDown>\r\n              <div className={classes.illustration}>\r\n                <img src=\"/images/498-[Converted].png\" alt=\"illustration\" />\r\n              </div>\r\n            </Hidden>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <div className={classes.accordion}>\r\n              {faqData.map((item, index) => (\r\n                <div className={classes.item} key={index.toString()}>\r\n                  <Accordion\r\n                    classes={{\r\n                      root: classes.paper\r\n                    }}\r\n                    expanded={expanded === index}\r\n                    onChange={handleChange(index)}\r\n                  >\r\n                    <AccordionSummary\r\n                      classes={{\r\n                        content: classes.content,\r\n                        expanded: classes.expanded,\r\n                      }}\r\n                    >\r\n                      <Typography className={classes.heading}>{item.q}</Typography>\r\n                      <ExpandMoreIcon className={classes.icon} />\r\n                    </AccordionSummary>\r\n                    <AccordionDetails\r\n                      classes={{\r\n                        root: classes.detail,\r\n                      }}\r\n                    >\r\n                      <Typography>\r\n                        {item.a}\r\n                      </Typography>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nFaq.propTypes = {\r\n  t: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation(['crypto-landing'])(Faq);\r\n"]},"metadata":{},"sourceType":"module"}