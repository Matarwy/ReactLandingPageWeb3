{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\TP\\\\v1\\\\TradingPlanet-Home\\\\components\\\\Counter\\\\Counter.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport CountUp from 'react-countup';\nimport ReactWOW from 'react-wow';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport routeLink from \"../../public/text/link\";\nimport { withTranslation } from \"../../i18n\";\nimport { useText } from \"../../theme/common\";\nimport useStyles from './counter-style';\n\nfunction Counter(props) {\n  const classes = useStyles();\n  const text = useText();\n  const {\n    t\n  } = props;\n  const {\n    0: play,\n    1: setPlay\n  } = useState(false);\n\n  const countup = (val, isPlay) => __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, isPlay ? __jsx(CountUp, {\n    end: val,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }) : 0);\n\n  const handlePlay = () => {\n    setTimeout(() => {\n      setPlay(true);\n    }, 200);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.counterWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(ReactWOW, {\n    animation: \"fadeIn\",\n    offset: 200,\n    callback: handlePlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    className: text.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, countup(2, play), \"\\xA0\", countup(234, play), \"\\xA0\", countup(567, play)), __jsx(Typography, {\n    component: \"p\",\n    className: text.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, t('common:crypto-landing.footer_counter'))), __jsx(\"div\", {\n    className: classes.callAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    className: text.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, t('common:crypto-landing.footer_waiting')), __jsx(Button, {\n    variant: \"contained\",\n    href: routeLink.crypto.register,\n    color: \"secondary\",\n    size: \"large\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, t('common:crypto-landing.getstarted')))));\n}\n\nCounter.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['crypto-landing'])(Counter);","map":{"version":3,"sources":["D:/projects/TP/v1/TradingPlanet-Home/components/Counter/Counter.js"],"names":["React","useState","PropTypes","CountUp","ReactWOW","Typography","Button","Container","routeLink","withTranslation","useText","useStyles","Counter","props","classes","text","t","play","setPlay","countup","val","isPlay","handlePlay","setTimeout","counterWrap","title","subtitle","callAction","crypto","register","button","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAMI,IAAI,GAAGL,OAAO,EAApB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAQH,KAAd;AACA,QAAM;AAAA,OAACI,IAAD;AAAA,OAAOC;AAAP,MAAkBjB,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMkB,OAAO,GAAG,CAACC,GAAD,EAAMC,MAAN,KACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,GAAG,MAAC,OAAD;AAAS,IAAA,GAAG,EAAED,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA2B,CADpC,CADF;;AAKA,QAAME,UAAU,GAAG,MAAM;AACvBC,IAAAA,UAAU,CAAC,MAAM;AAAEL,MAAAA,OAAO,CAAC,IAAD,CAAP;AAAgB,KAAzB,EAA2B,GAA3B,CAAV;AACD,GAFD;;AAGA,SACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACU,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,SAAS,EAAC,QAApB;AAA6B,IAAA,MAAM,EAAE,GAArC;AAA0C,IAAA,QAAQ,EAAEF,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEP,IAAI,CAACU,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OAAO,CAAC,CAAD,EAAIF,IAAJ,CADV,UAGGE,OAAO,CAAC,GAAD,EAAMF,IAAN,CAHV,UAKGE,OAAO,CAAC,GAAD,EAAMF,IAAN,CALV,CADF,EAQE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,GAAtB;AAA0B,IAAA,SAAS,EAAEF,IAAI,CAACW,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,CAAC,CAAC,sCAAD,CADJ,CARF,CADF,EAaE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACa,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,YAAY,MAArC;AAAsC,IAAA,SAAS,EAAEZ,IAAI,CAACW,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,CAAC,CAAC,sCAAD,CADJ,CADF,EAIE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAER,SAAS,CAACoB,MAAV,CAAiBC,QAAnD;AAA6D,IAAA,KAAK,EAAC,WAAnE;AAA+E,IAAA,IAAI,EAAC,OAApF;AAA4F,IAAA,SAAS,EAAEf,OAAO,CAACgB,MAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,CAAC,CAAC,kCAAD,CADJ,CAJF,CAbF,CADF,CADF;AA0BD;;AAEDJ,OAAO,CAACmB,SAAR,GAAoB;AAClBf,EAAAA,CAAC,EAAEd,SAAS,CAAC8B,IAAV,CAAeC;AADA,CAApB;AAIA,eAAexB,eAAe,CAAC,CAAC,gBAAD,CAAD,CAAf,CAAoCG,OAApC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CountUp from 'react-countup';\r\nimport ReactWOW from 'react-wow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport routeLink from '~/public/text/link';\r\nimport { withTranslation } from '~/i18n';\r\nimport { useText } from '~/theme/common';\r\nimport useStyles from './counter-style';\r\n\r\nfunction Counter(props) {\r\n  const classes = useStyles();\r\n  const text = useText();\r\n  const { t } = props;\r\n  const [play, setPlay] = useState(false);\r\n  const countup = (val, isPlay) => (\r\n    <span>\r\n      {isPlay ? <CountUp end={val} /> : 0}\r\n    </span>\r\n  );\r\n  const handlePlay = () => {\r\n    setTimeout(() => { setPlay(true); }, 200);\r\n  };\r\n  return (\r\n    <div className={classes.counterWrap}>\r\n      <Container maxWidth=\"md\">\r\n        <ReactWOW animation=\"fadeIn\" offset={200} callback={handlePlay}>\r\n          <Typography variant=\"h3\" className={text.title}>\r\n            {countup(2, play)}\r\n            &nbsp;\r\n            {countup(234, play)}\r\n            &nbsp;\r\n            {countup(567, play)}\r\n          </Typography>\r\n          <Typography component=\"p\" className={text.subtitle}>\r\n            {t('common:crypto-landing.footer_counter')}\r\n          </Typography>\r\n        </ReactWOW>\r\n        <div className={classes.callAction}>\r\n          <Typography variant=\"h4\" gutterBottom className={text.subtitle}>\r\n            {t('common:crypto-landing.footer_waiting')}\r\n          </Typography>\r\n          <Button variant=\"contained\" href={routeLink.crypto.register} color=\"secondary\" size=\"large\" className={classes.button}>\r\n            {t('common:crypto-landing.getstarted')}\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nCounter.propTypes = {\r\n  t: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation(['crypto-landing'])(Counter);\r\n"]},"metadata":{},"sourceType":"module"}